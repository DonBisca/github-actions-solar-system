name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: â€˜mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            # sele da un nombre unico a la key de estos ficheros en cahe haciendo un hash del fichero package-lock.json, cualquier cambio que reciba este fichero
            # que se genere un nuevo valor y cambie la cache por la nueva que se genere
            key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    
    code-coverage:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v4
          with:
              node-version: 18
          
        - name: Install Dependencies
          run: npm install

        - name: Check Code Coverage
          continue-on-error: true
          run: npm run code-coverage 
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
              name: Code-Coverage-Result
              path: coverage
              retention-days: 5

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      permissions:
        packages: write
      runs-on: ubuntu-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: GHCR Login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            # el usuario se recupera del contexto de github
            username: donbisca
            # username: ${{ github.repository_owner }}
            # el token de github en este caso no hace falta crearlo como un secreto, se genera automaticamente
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Container Registry Push          
          uses: docker/build-push-action@v6
          with:
            # ruta donde se tiene el Dockerfile
            context: .
            push: true
            # se genera una version nueva basada en el sha del commit
            tags: |
                ghcr.io/donbisca/solar-system:${{ github.sha }}
        
      